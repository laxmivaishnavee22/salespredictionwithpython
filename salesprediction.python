import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Sample data creation
data = {
    'advertising_expenditure': [1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500],
    'target_audience_segment': [1, 2, 1, 2, 1, 2, 1, 2, 1, 2],  # 1 for segment A, 2 for segment B
    'advertising_platform': [1, 1, 2, 2, 1, 1, 2, 2, 1, 1],  # 1 for platform X, 2 for platform
    'sales': [200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100]
}
from google.colab import drive
drive.mount('/content/drive')
# Convert to DataFrame
df = pd.DataFrame(data)
# Features and target variable
X = df[['advertising_expenditure', 'target_audience_segment', 'advertising_platform']]
y = df['sales']
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Create a linear regression model
model = LinearRegression()

# Fit the model
model.fit(X_train, y_train)
  LinearRegression?i
LinearRegression()
# Make predictions
y_pred = model.predict(X_test)
# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Output results
print("Predicted sales:", y_pred)
print("Mean Squared Error:", mse)
print("R^2 Score:", r2)
Predicted sales: [1000.  300.]
Mean Squared Error: 6.462348535570529e-26
R^2 Score: 1.0
